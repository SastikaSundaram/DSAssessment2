# -*- coding: utf-8 -*-
"""assessment2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hmjFK_bOi3IKuGCKGWr2DISq9Tom3kcF
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

df=pd.read_csv('/content/diabetes.csv');

print(df.head())
print(df.info())
print(df.isnull().sum())

from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score
from sklearn.metrics import f1_score
from sklearn.metrics import precision_score
from sklearn.metrics import recall_score
from sklearn.metrics import confusion_matrix
from sklearn.metrics import classification_report
import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd

df=pd.read_csv('/content/diabetes.csv');

X=df.drop(columns='outcome',axis=1)
y=df['outcome']

scaler=StandardScaler()
scaler.fit(X)
standardized_data=scaler.transform(X)

X=standardized_data
y=df['outcome']

X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,stratify=y,random_state=2)

model=LogisticRegression()
model.fit(X_train,y_train)

y_pred=model.predict(X_test)
print('Accuracy:',accuracy_score(y_test,y_pred))
print('f1_score:',f1_score(y_test,y_pred))
print('precision_score:',precision_score(y_test,y_pred))
print('recall_score:',recall_score(y_test,y_pred))

print(confusion_matrix(y_test,y_pred))
print(classification_report(y_test,y_pred))

plt.figure(figsize=(6, 4))
sns.heatmap(df.corr(), annot=True, cmap='coolwarm')
plt.title('Correlation Heatmap')
plt.show()